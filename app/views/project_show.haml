- content_for :left do
	%p
		%a{:href => "/projects/#{@project.id}/filesystem/browse/tree"} Browse Filesystem
	%p
		%a{:href => "/projects/#{@project.id}/tasks/new"} Create a new build task
	%h3 Tasks
	#tasks
		- if @project.tasks.count == 0
			%h4 No tasks have been specified
		- else
			- @project.tasks.each_with_index do |task, index|
				%div{:class => "task profile", :id => "task_#{index+1}"}
					%a{:href => "/projects/#{@project.id}/tasks/#{task.id}/show"}= task.task_type.title if !task.task_type.nil?
					%p
						%form{:id => "delete_task_form_#{task.id}", :action => "/projects/#{@project.id}/tasks/#{task.id}/delete", :method => :post}
							%input{:type => "hidden", :name => "_method", :value => "delete"}
						%a{:href => "/projects/#{@project.id}/tasks/#{task.id}/build"} Build | 
						%a{:id => "delete_task_submit_#{task.id}", :href => "#"} Delete
						:javascript
							$("#delete_task_submit_#{task.id}").click(function(){
								$("#delete_task_form_#{task.id}").submit();
							});

- content_for :right do
	%form{:action => "/projects/delete/#{@project.id}", :method => "post"}
		%input{:type => "hidden", :name => "_method", :value => "delete"}
		%input{:type => "submit", :value => "Delete Project"}
	%form{:action => "/projects/touch/#{@project.id}", :method => "post"}
		%input{:type => "submit", :value => "Check for Updates"}
.project
	%h3= @project.title
	.links
		%a{:href=>"/projects/update/#{@project.id}"} (Edit)
		%a{:href=>"/projects"} (Back)
#readme.profile
	%h3= "About #{@project.title}"
	#readme= @project.repo_readme
#commits
	%h3 Recent Commits
	- if @project.repo == nil ||  @project.repo.commits.count == 0
		.error Either this project has no commits or you have just added it and we are still in the process of fetching it.
	- else
		- @project.repo.commits('master', 25).each_with_index do |commit, index|
			%div{:id => "commit_#{index + 1}", :class => "profile #{(index % 2 == 1) ? 'left' : 'right'}"}
				%img{:src => "#{gravatar(commit.committer.email)}?s=60"}
				%h4= "#{commit.committer.name} (#{commit.committer.email})"
				%p= commit.message
				%p
					%i= commit.date.to_s
		